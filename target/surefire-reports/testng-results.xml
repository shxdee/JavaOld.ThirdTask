<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="40" passed="40" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-17T01:02:23 OMST" name="Command line suite" finished-at="2021-12-17T01:02:23 OMST" duration-ms="70">
    <groups>
    </groups>
    <test started-at="2021-12-17T01:02:23 OMST" name="Command line test" finished-at="2021-12-17T01:02:23 OMST" duration-ms="70">
      <class name="main.PackagedPieceProductTest">
        <test-method signature="testGetNetWeight()[pri:0, instance:main.PackagedPieceProductTest@543788f3]" started-at="2021-12-17T01:02:23 OMST" name="testGetNetWeight" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNetWeight -->
        <test-method signature="testGetCount()[pri:0, instance:main.PackagedPieceProductTest@543788f3]" started-at="2021-12-17T01:02:23 OMST" name="testGetCount" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCount -->
        <test-method signature="testGetGrossWeight()[pri:0, instance:main.PackagedPieceProductTest@543788f3]" started-at="2021-12-17T01:02:23 OMST" name="testGetGrossWeight" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGrossWeight -->
        <test-method signature="testGetProduct()[pri:0, instance:main.PackagedPieceProductTest@543788f3]" started-at="2021-12-17T01:02:23 OMST" name="testGetProduct" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProduct -->
      </class> <!-- main.PackagedPieceProductTest -->
      <class name="main.ProductBatchTest">
        <test-method signature="testGetDescription()[pri:0, instance:main.ProductBatchTest@5a4041cc]" started-at="2021-12-17T01:02:23 OMST" name="testGetDescription" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDescription -->
        <test-method signature="testGetProducts()[pri:0, instance:main.ProductBatchTest@5a4041cc]" started-at="2021-12-17T01:02:23 OMST" name="testGetProducts" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProducts -->
        <test-method signature="testGetWeight()[pri:0, instance:main.ProductBatchTest@5a4041cc]" started-at="2021-12-17T01:02:23 OMST" name="testGetWeight" finished-at="2021-12-17T01:02:23 OMST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetWeight -->
      </class> <!-- main.ProductBatchTest -->
      <class name="main.PackagedProductSetTest">
        <test-method signature="testGetGrossWeight()[pri:0, instance:main.PackagedProductSetTest@1da51a35]" started-at="2021-12-17T01:02:23 OMST" name="testGetGrossWeight" finished-at="2021-12-17T01:02:23 OMST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGrossWeight -->
        <test-method signature="testGetProducts()[pri:0, instance:main.PackagedProductSetTest@1da51a35]" started-at="2021-12-17T01:02:23 OMST" name="testGetProducts" finished-at="2021-12-17T01:02:23 OMST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProducts -->
        <test-method signature="testGetNetWeight()[pri:0, instance:main.PackagedProductSetTest@1da51a35]" started-at="2021-12-17T01:02:23 OMST" name="testGetNetWeight" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNetWeight -->
      </class> <!-- main.PackagedProductSetTest -->
      <class name="main.ProductServiceTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:main.ProductServiceTest@4bb4de6a]" started-at="2021-12-17T01:02:23 OMST" name="setUp" finished-at="2021-12-17T01:02:23 OMST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCheckAllWeighted()[pri:0, instance:main.ProductServiceTest@4bb4de6a]" started-at="2021-12-17T01:02:23 OMST" name="testCheckAllWeighted" finished-at="2021-12-17T01:02:23 OMST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckAllWeighted -->
        <test-method signature="testCounter()[pri:0, instance:main.ProductServiceTest@4bb4de6a]" started-at="2021-12-17T01:02:23 OMST" name="testCounter" finished-at="2021-12-17T01:02:23 OMST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCounter -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:main.ProductServiceTest@4bb4de6a]" started-at="2021-12-17T01:02:23 OMST" name="setUp" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:main.ProductServiceTest@4bb4de6a]" started-at="2021-12-17T01:02:23 OMST" name="setUp" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDeepCounter()[pri:0, instance:main.ProductServiceTest@4bb4de6a]" started-at="2021-12-17T01:02:23 OMST" name="testDeepCounter" finished-at="2021-12-17T01:02:23 OMST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeepCounter -->
      </class> <!-- main.ProductServiceTest -->
      <class name="main.BeginStringFilterTest">
        <test-method signature="testApplyFalse()[pri:0, instance:main.BeginStringFilterTest@5d11346a]" started-at="2021-12-17T01:02:23 OMST" name="testApplyFalse" finished-at="2021-12-17T01:02:23 OMST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplyFalse -->
        <test-method signature="testApplyOK()[pri:0, instance:main.BeginStringFilterTest@5d11346a]" started-at="2021-12-17T01:02:23 OMST" name="testApplyOK" finished-at="2021-12-17T01:02:23 OMST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplyOK -->
        <test-method signature="testGetPattern()[pri:0, instance:main.BeginStringFilterTest@5d11346a]" started-at="2021-12-17T01:02:23 OMST" name="testGetPattern" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPattern -->
      </class> <!-- main.BeginStringFilterTest -->
      <class name="main.EndStringFilterTest">
        <test-method signature="testApplyOK()[pri:0, instance:main.EndStringFilterTest@35a50a4c]" started-at="2021-12-17T01:02:23 OMST" name="testApplyOK" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplyOK -->
        <test-method signature="testApplyFalse()[pri:0, instance:main.EndStringFilterTest@35a50a4c]" started-at="2021-12-17T01:02:23 OMST" name="testApplyFalse" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplyFalse -->
        <test-method signature="testGetPattern()[pri:0, instance:main.EndStringFilterTest@35a50a4c]" started-at="2021-12-17T01:02:23 OMST" name="testGetPattern" finished-at="2021-12-17T01:02:23 OMST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPattern -->
      </class> <!-- main.EndStringFilterTest -->
      <class name="main.ContainsStringFilterTest">
        <test-method signature="testApplyOK()[pri:0, instance:main.ContainsStringFilterTest@3b94d659]" started-at="2021-12-17T01:02:23 OMST" name="testApplyOK" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplyOK -->
        <test-method signature="testApplyFalse()[pri:0, instance:main.ContainsStringFilterTest@3b94d659]" started-at="2021-12-17T01:02:23 OMST" name="testApplyFalse" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplyFalse -->
        <test-method signature="testGetPattern()[pri:0, instance:main.ContainsStringFilterTest@3b94d659]" started-at="2021-12-17T01:02:23 OMST" name="testGetPattern" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPattern -->
      </class> <!-- main.ContainsStringFilterTest -->
      <class name="main.PackagedWeightProductTest">
        <test-method signature="testConstructorNegativeWeight()[pri:0, instance:main.PackagedWeightProductTest@44a3ec6b]" started-at="2021-12-17T01:02:23 OMST" name="testConstructorNegativeWeight" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Negative weight!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Negative weight!
at main.PackagedWeightProduct.<init>(PackagedWeightProduct.java:15)
at main.PackagedWeightProductTest.testConstructorNegativeWeight(PackagedWeightProductTest.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructorNegativeWeight -->
        <test-method signature="testGetGrossWeight()[pri:0, instance:main.PackagedWeightProductTest@44a3ec6b]" started-at="2021-12-17T01:02:23 OMST" name="testGetGrossWeight" finished-at="2021-12-17T01:02:23 OMST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGrossWeight -->
        <test-method signature="testGetNetWeight()[pri:0, instance:main.PackagedWeightProductTest@44a3ec6b]" started-at="2021-12-17T01:02:23 OMST" name="testGetNetWeight" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNetWeight -->
      </class> <!-- main.PackagedWeightProductTest -->
      <class name="main.PieceProductTest">
        <test-method signature="testConstructorNegativeWeight()[pri:0, instance:main.PieceProductTest@71623278]" started-at="2021-12-17T01:02:23 OMST" name="testConstructorNegativeWeight" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at main.PieceProduct.<init>(PieceProduct.java:13)
at main.PieceProductTest.testConstructorNegativeWeight(PieceProductTest.java:10)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructorNegativeWeight -->
      </class> <!-- main.PieceProductTest -->
      <class name="main.WeightProductTest">
        <test-method signature="testConstructorNullDescription()[pri:0, instance:main.WeightProductTest@3439f68d]" started-at="2021-12-17T01:02:23 OMST" name="testConstructorNullDescription" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at main.Product.<init>(Product.java:13)
at main.WeightProduct.<init>(WeightProduct.java:7)
at main.WeightProductTest.testConstructorNullDescription(WeightProductTest.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructorNullDescription -->
        <test-method signature="testConstructorNullName()[pri:0, instance:main.WeightProductTest@3439f68d]" started-at="2021-12-17T01:02:23 OMST" name="testConstructorNullName" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at main.Product.<init>(Product.java:13)
at main.WeightProduct.<init>(WeightProduct.java:7)
at main.WeightProductTest.testConstructorNullName(WeightProductTest.java:9)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructorNullName -->
      </class> <!-- main.WeightProductTest -->
      <class name="main.ProductTest">
        <test-method signature="equalsTest()[pri:0, instance:main.ProductTest@140e5a13]" started-at="2021-12-17T01:02:23 OMST" name="equalsTest" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalsTest -->
        <test-method signature="getNameTest()[pri:0, instance:main.ProductTest@140e5a13]" started-at="2021-12-17T01:02:23 OMST" name="getNameTest" finished-at="2021-12-17T01:02:23 OMST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNameTest -->
        <test-method signature="testConstructorNullDescription()[pri:0, instance:main.ProductTest@140e5a13]" started-at="2021-12-17T01:02:23 OMST" name="testConstructorNullDescription" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at main.Product.<init>(Product.java:13)
at main.ProductTest.testConstructorNullDescription(ProductTest.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructorNullDescription -->
        <test-method signature="toStringTest()[pri:0, instance:main.ProductTest@140e5a13]" started-at="2021-12-17T01:02:23 OMST" name="toStringTest" finished-at="2021-12-17T01:02:23 OMST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toStringTest -->
        <test-method signature="testConstructorNullName()[pri:0, instance:main.ProductTest@140e5a13]" started-at="2021-12-17T01:02:23 OMST" name="testConstructorNullName" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at main.Product.<init>(Product.java:13)
at main.ProductTest.testConstructorNullName(ProductTest.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructorNullName -->
        <test-method signature="getWeightTest()[pri:0, instance:main.ProductTest@140e5a13]" started-at="2021-12-17T01:02:23 OMST" name="getWeightTest" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWeightTest -->
      </class> <!-- main.ProductTest -->
      <class name="main.ProductPackagingTest">
        <test-method signature="equalsTest()[pri:0, instance:main.ProductPackagingTest@15b3e5b]" started-at="2021-12-17T01:02:23 OMST" name="equalsTest" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalsTest -->
        <test-method signature="getNameTest()[pri:0, instance:main.ProductPackagingTest@15b3e5b]" started-at="2021-12-17T01:02:23 OMST" name="getNameTest" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNameTest -->
        <test-method signature="testConstructorNullName()[pri:0, instance:main.ProductPackagingTest@15b3e5b]" started-at="2021-12-17T01:02:23 OMST" name="testConstructorNullName" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at main.ProductPackaging.<init>(ProductPackaging.java:15)
at main.ProductPackagingTest.testConstructorNullName(ProductPackagingTest.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructorNullName -->
        <test-method signature="getWeightTest()[pri:0, instance:main.ProductPackagingTest@15b3e5b]" started-at="2021-12-17T01:02:23 OMST" name="getWeightTest" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWeightTest -->
        <test-method signature="testConstructorNegativeWeight()[pri:0, instance:main.ProductPackagingTest@15b3e5b]" started-at="2021-12-17T01:02:23 OMST" name="testConstructorNegativeWeight" finished-at="2021-12-17T01:02:23 OMST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Negative weight!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Negative weight!
at main.ProductPackaging.<init>(ProductPackaging.java:14)
at main.ProductPackagingTest.testConstructorNegativeWeight(ProductPackagingTest.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructorNegativeWeight -->
        <test-method signature="toStringTest()[pri:0, instance:main.ProductPackagingTest@15b3e5b]" started-at="2021-12-17T01:02:23 OMST" name="toStringTest" finished-at="2021-12-17T01:02:23 OMST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toStringTest -->
      </class> <!-- main.ProductPackagingTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
